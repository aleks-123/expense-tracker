{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpenseFilter.jsx","components/Expenses/ExpenseDate.jsx","components/Expenses/ExpenseItem.jsx","components/Expenses/ExpensesList.jsx","components/Chart/ChartBar.jsx","components/Chart/Chart.jsx","components/Expenses/ExpensesChart.jsx","components/Expenses/Expenses.jsx","components/NewExpense/ExpenseForm.jsx","components/NewExpense/NewExpense.jsx","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","yearExpenses","target","ExpenseDate","year","date","getFullYear","month","toLocaleString","day","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","console","log","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","showForm","setShowForm","onClick","oldState","onSubmit","e","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","NewExpense","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","expenses","setExpenses","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.7edf9caf.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Card.css\";\n\nconst Card = (props) => {\n  const classes = \"card \" + props.className;\n\n  return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","import React from \"react\";\n\nimport \"./ExpenseFilter.css\";\n\nconst ExpensesFilter = (props) => {\n  // const [year, setYear] = useState(\"\");\n\n  const dropdownChangeHandler = (event) => {\n    props.yearExpenses(event.target.value);\n  };\n\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={dropdownChangeHandler}>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import React from \"react\";\nimport \"./ExpenseDate.css\";\n\nconst ExpenseDate = (props) => {\n  const year = props.date.getFullYear();\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__year\">{year}</div>\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__day\">{day}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import React from \"react\";\n\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\nimport \"./ExpenseItem.css\";\n\nconst ExpenseItem = (props) => {\n  return (\n    <li>\n      <Card className=\"expense-item\">\n        <ExpenseDate date={props.date} />\n        <div className=\"expense-item__description\">\n          <h2>{props.title}</h2>\n          <div className=\"expense-item__price\">${props.amount}</div>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ExpenseItem;\n","import React from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./ExpensesList.css\";\n\nconst ExpensesList = (props) => {\n  if (props.items.length === 0) {\n    return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>;\n  }\n\n  return (\n    <ul className=\"expenses-list\">\n      {props.items.map((expense) => (\n        <ExpenseItem\n          key={expense.id}\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ExpensesList;\n","import React from \"react\";\n\nimport \"./ChartBar.css\";\n\nconst ChartBar = (props) => {\n  let barFillHeight = \"0%\";\n\n  console.log(props);\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n  }\n  // console.log(barFillHeight);\n\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import React from \"react\";\nimport ChartBar from \"./ChartBar\";\nimport \"./Chart.css\";\n\nconst Chart = (props) => {\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointValues);\n  console.log(totalMaximum);\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from \"react\";\nimport Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = (props) => {\n  const chartDataPoints = [\n    { label: \"Jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 },\n  ];\n\n  for (const expense of props.expense) {\n    const expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\n    chartDataPoints[expenseMonth].value += +expense.amount;\n  }\n  return <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpensesChart;\n","import React, { useState } from \"react\";\n\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpenseFilter.jsx\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\nimport \"./Expenses.css\";\n\nconst Expenses = (props) => {\n  /////\n\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n\n  const filterChangeHandler = (year) => {\n    setFilteredYear(year);\n  };\n\n  const filteredExpenses = props.items.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          selected={filteredYear}\n          yearExpenses={filterChangeHandler}\n        />\n        <ExpensesChart expense={filteredExpenses} />\n        <ExpensesList items={filteredExpenses} />\n      </Card>\n    </div>\n  );\n};\n\nexport default Expenses;\n","import React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = (props) => {\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n\n  // const [userInput, setUserInput] = useState({\n  //   enteredTitle: \"\",\n  //   enteredAmount: \"\",\n  //   enteredDate: \"\",\n  // });\n\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   enteredTitle: event.target.value,\n    // });\n\n    // setUserInput((prevState) => {\n    //   return { ...prevState, enteredTitle: event.target.value };\n    // });\n  };\n\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n  };\n\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n  };\n\n  const submitHanlder = (e) => {\n    e.preventDefault();\n\n    const expenseData = {\n      title: enteredTitle,\n      amount: +enteredAmount,\n      date: new Date(enteredDate),\n    };\n\n    props.onSaveExpenseData(expenseData);\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n  };\n\n  const [showForm, setShowForm] = useState(false);\n\n  // setShowAddExpense((oldState) => !oldState);\n  const hideShow = () => {\n    setShowForm((oldState) => !oldState);\n  };\n  return (\n    <div>\n      {!showForm && <button onClick={hideShow}>Add New Expense</button>}\n      {showForm && (\n        <form onSubmit={submitHanlder}>\n          <div className=\"new-expense__controls\">\n            <div className=\"new-expense__control\">\n              <label>Title</label>\n              <input\n                type=\"text\"\n                value={enteredTitle}\n                onChange={titleChangeHandler}\n              />\n            </div>\n            <div className=\"new-expense__control\">\n              <label>Amount</label>\n              <input\n                type=\"number\"\n                min=\"0.01\"\n                step=\"0.01\"\n                onChange={amountChangeHandler}\n                value={enteredAmount}\n              />\n            </div>\n            <div className=\"new-expense__control\">\n              <label>Date</label>\n              <input\n                type=\"date\"\n                min=\"2021-01-01\"\n                max=\"2024-12-31\"\n                value={enteredDate}\n                onChange={dateChangeHandler}\n              />\n            </div>\n          </div>\n          <div className=\"new-expense__actions\">\n            <button\n              type=\"button\"\n              onClick={() => setShowForm((oldState) => false)}\n            >\n              Close\n            </button>\n            <button type=\"submit\">Add Expense</button>\n          </div>\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default ExpenseForm;\n","import React from \"react\";\n\nimport ExpenseForm from \"./ExpenseForm\";\nimport \"./NewExpense.css\";\n\nconst NewExpense = (props) => {\n  /////////////////\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString(),\n    };\n    console.log(expenseData);\n    props.onAddExpense(expenseData);\n  };\n\n  return (\n    <div className=\"new-expense\">\n      <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} />\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses.jsx\";\nimport NewExpense from \"./components/NewExpense/NewExpense.jsx\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHanldert = (expense) => {\n    console.log(\"In App.js\");\n    console.log(expense);\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHanldert} />\n      <Expenses items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}